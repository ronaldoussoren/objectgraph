# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

schedules:
- cron: "0 0 * * 0"
  displayName: Weekly midnight build
  branches:
    include:
    - master
  always: true

strategy:
  matrix:
    macOS_py37:
      vm.image: 'macOS-10.14'
      python.version: '3.7'
    linux_py37:
      vm.image: 'ubuntu-16.04'
      python.version: '3.7'
    windows_py37:
      vm.image: 'windows-2019'
      python.version: '3.7'
    macOS_py36:
      vm.image: 'macOS-10.13'
      python.version: '3.6'
    linux_py36:
      vm.image: 'ubuntu-16.04'
      python.version: '3.6'
    windows_py36:
      vm.image: 'windows-2019'
      python.version: '3.6'

pool:
  vmImage: '$(vm.image)'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version) on $(vm.image)'

- script: |
    python -m pip install --upgrade pip
    pip install unittest-xml-reporting coverage typing_extensions
  displayName: 'Install dependencies'

- script: |
    python -m coverage run -m xmlrunner discover -o test-results
  displayName: 'Run tests'

- script: |
     python -m coverage xml
  displayName: Report coverage

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/TEST-*.xml'
    testRunTitle: 'Publish test results for Python $(python.version)'
